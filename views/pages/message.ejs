<% extend('../defaultLayouts/defaultLayout') %>

<div class="app-content content container-fluid">
  <div class="col-xl-12">
    <div class="sidebar-left sidebar-fixed ps-container ps-theme-dark" data-ps-id="03674ca8-d455-878f-efc6-2c1d320c2753">
      <div class="sidebar">
        <div class="sidebar-content card hidden-md-down">
          <div class="card-block chat-fixed-search">
            <fieldset class="form-group position-relative has-icon-left m-0">
                <input type="text" class="form-control" id="iconLeft4" placeholder="Search user">
                <div class="form-control-position">
                    <i class="ft-search"></i>
                </div>
            </fieldset>
          </div>
          <div id="users_list" class="list-group position-relative" style="max-height: 700px; overflow-y: auto; -ms-overflow-style: -ms-autohiding-scrollbar">

          </div>
        </div>
      </div>
      <div class="ps-scrollbar-x-rail" style="left: 0px; bottom: 3px;">
        <div class="ps-scrollbar-x" tabindex="0" style="left: 0px; width: 0px;"></div>
      </div>
      <div class="ps-scrollbar-y-rail" style="top: 0px; height: 820px; right: 3px;">
        <div class="ps-scrollbar-y" tabindex="0" style="top: 82px; height: 738px;"></div>
      </div>
    </div>

    <div class="content-right">
      <div class="content-wrapper">
        <div class="content-header row">
        </div>
        <div class="content-body">
          <!-- where the current conversation is shown -->
          <div id="current_chat" style="width: 100%; padding-top: 0px; text-align: center"></div>
          <!-- chat area -->
          <br>
          <section class="chat-app-form">
            <!-- this is where messages appear -->
            <section id="chatroom" style="max-height: 550px; overflow-y: auto; -ms-overflow-style: -ms-autohiding-scrollbar">

            </section>
            <!-- this is where user types their messages -->
            <form id="chatbox" class="chat-app-input" autocomplete="off" style="position: fixed; bottom: 0; width: 62%; padding-bottom: 20px">
              <!-- input box -->
              <fieldset class="form-group col-xs-10 m-0">
                <div class="form-control-position">
                  <i class="icon-emoticon-smile"></i>
                </div>
                <input id="message" type="text" value="" class="form-control" placeholder="Type your message"></input>
                <div class="form-control-position control-position-right">
                </div>
              </fieldset>
              <!-- send button -->
              <fieldset class="form-group position-relative has-icon-left col-xs-2 m-0">
                <button id="send_message" type="button" class="btn btn-primary"><i class="fa fa-paper-plane-o hidden-lg-up"></i>
                  <span class="hidden-md-down">Send</span>
                </button>
              </fieldset>
            </form>
            <div id="hidden-div"><%= currentAcc._id %></div>
          </section>
        </div>
      </div>
    </div>
  </div>
</div>




<!-- script stuff -->
<script src="scripts/suggest.js" type="text/javascript"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
  $(document).ready(function() {
    $('#current_chat').hide();
    $('#hidden-div').hide();
    // chat function
    var socket = io();
    var chatroom = $('#chatroom');
    var message = $('#message');
    var send_message = $('#send_message');
    var chatbox = $('#chatbox');
    var current_user_name = $('#current_user_name').html();
    var users_list = $('#users_list');
    var current_chat = $('#current_chat');
    var current_chat_name = $('#current_chat_name');
    var currentSocketID = $('#hidden-div').html();

    //loading all chatable users
    socket.on('new connection', (data) => {
      socket.emit('connect self', {currentSocketID});
      let chatSession = data.chatSession;
      chatSession.forEach(session => {
        // search for the right session here based on sessionID
        if(session.sessionID == currentSocketID) {
          let connectedUsers = session.connectedUsers.slice();
          connectedUsers.forEach(user => {
            let room_id = user.id;
            let name = user.name;
            let avatar = user.avatar;
            users_list.append(
              `<a id="${room_id}" class="list-group-item list-group-item-action media no-border">
                <div class="media-left">
                  <span class="avatar avatar-md avatar-away"><img class="media-object rounded-circle" src="${avatar}"/></span>
                </div>
                <div class="media-body">
                  <h6 class="list-group-item-heading">${name}<span class="font-small-3 float-xs-right primary">Yesterday</span></h6>
                  <p class="list-group-item-text text-muted"><i class="ft-check font-small-2"></i> Some message here</p>
                </div>
              </a>`
            );
            let button_id = '#' + room_id;
            $(button_id).bind('click', () => {
              socket.emit('join private', {
                room_id,
                currentSocketID,
              });
              current_chat.show();
              // current_chat.html(`<strong>${name}</strong>`);
              current_chat.html(name);
              // current_chat_name.html(name);
            });
          });
        }
      });
    });

    //sending a message
    chatbox.submit((e) => {
      e.preventDefault();
      if (current_chat.html() != '') {
        socket.emit('private message', {
          message: message.val(),
          sender: current_user_name,
          recipient: current_chat.html(),
          currentSocketID,
        });
        socket.emit('leave rooms', {currentSocketID});
      }
      message.val('');
      return false;
    });

    //show private message on the screen
    socket.on('private message', (data) => {
      let message = data.message;
      let sender = data.sender;
      let recipient = data.recipient;
      let flag = data.flag;
      if(flag == 2) {
        let new_log = `
          <div class="chat">
            <div class="chat-body">
              <div class="chat-content" style="text-align: right; position: relative; display: block; float: right; padding: 8px 15px; margin: 0 20px 10px 0; clear: both; color: #fff; background-color: #00B5B8; border-radius: 4px;">
                <p>${sender} to ${recipient}: ${message}</p>
              </div>
            </div>
          </div>
        `;
        chatroom.append('<li>' + new_log + '</li>');
      } else {
        current_chat.show();
        // current_chat.html(`<strong>${sender}</strong>`);
        current_chat.html(sender);
        // current_chat_name.html(sender);
        let new_log = `
          <div class="chat chat-left" style="right: auto; left: -10px; border-right-color: #edeef0; border-left-color: transparent;">
            <div class="chat-body">
              <div class="chat-content" style="text-align: left; float: left; margin: 0 0 10px 20px; color: #404E67; background-color: #edeef0; position: relative; display: block; padding: 8px 15px; clear: both;">
                <p>${sender} to ${recipient}: ${message}</p>
              </div>
            </div>
          </div>
        `;
        chatroom.append('<li>' + new_log + '</li>');
      }
    })

    //disconnection
    socket.on('disconnect', () => {
      socket.emit('disconnect', {currentSocketID});
    })
  })
</script>
